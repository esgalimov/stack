void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 0
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 1
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 1
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 2
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 2
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 3
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 3
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 4
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 4
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 5
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 5
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 6
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 6
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 7
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 7
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 8
    capacity = 8
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 8
    capacity = 8
    data 0x16d14b680
}


void stack_resize(stack *, size_t) at funcs.cpp(115):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 8
    capacity = 8
    data 0x16d14b680
}


void stack_resize(stack *, size_t) at funcs.cpp(121):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 8
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 9
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 9
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 10
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 10
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 11
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(84):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 11
    capacity = 16
    data 0x16d14b680
}


void stack_push(stack *, elem) at funcs.cpp(92):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 12
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 12
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 11
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 11
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 10
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 10
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 9
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 9
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 8
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 8
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (OK) "&stk1" at int main() at main.cpp(8):
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(99):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


void stack_pop(stack *, elem *) at funcs.cpp(108):
Stack 0x16d14b680 (ERROR) "&stk1" at int main() at main.cpp(8):
data have NULL pointer
{
    size     = 7
    capacity = 16
    data 0x16d14b680
}


