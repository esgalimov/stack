int stack_ctor_(stack *, size_t, const char *, const char *, const char *, int) at funcs.cpp(23):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 0
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 0
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 1
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 1
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 2
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 2
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 3
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 3
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 4
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 4
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 5
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 5
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 6
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 6
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 7
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 7
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 8
    capacity = 8
    data 0x104d014c0
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 8
    capacity = 8
    data 0x104d014c0
}


void stack_resize(stack *, size_t) at funcs.cpp(118):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 8
    capacity = 8
    data 0x104d014c0
}


void stack_resize(stack *, size_t) at funcs.cpp(124):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 8
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 9
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 9
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 10
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 10
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 11
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(87):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 11
    capacity = 16
    data 0x105302d40
}


void stack_push(stack *, elem) at funcs.cpp(95):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 12
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 12
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 11
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 11
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 10
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 10
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 9
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 9
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 8
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 8
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 7
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 7
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 6
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 6
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 5
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 5
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 4
    capacity = 16
    data 0x105302d40
}


void stack_pop(stack *, elem *) at funcs.cpp(102):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 4
    capacity = 16
    data 0x105302d40
}


void stack_resize(stack *, size_t) at funcs.cpp(118):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 3
    capacity = 16
    data 0x105302d40
}


void stack_resize(stack *, size_t) at funcs.cpp(124):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 3
    capacity = 4
    data 0x104e01fc0
}


void stack_pop(stack *, elem *) at funcs.cpp(111):
Stack 0x16d3af700 (OK) "&stk1" at int main() at main.cpp(16):
{
    size     = 3
    capacity = 4
    data 0x104e01fc0
}


